/* tslint:disable */

/* eslint-disable */

/**
 * test-front API
 * test-front API
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ApiKeyDto, LoginDto, SignUpDto } from "../models/index";
import {
  ApiKeyDtoFromJSON,
  ApiKeyDtoToJSON,
  LoginDtoFromJSON,
  LoginDtoToJSON,
  SignUpDtoFromJSON,
  SignUpDtoToJSON,
} from "../models/index";
import * as runtime from "../runtime";

export interface LoginRequest {
  loginDto: LoginDto;
}

export interface SignUpRequest {
  signUpDto: SignUpDto;
}

/**
 *
 */
export class AuthApi extends runtime.BaseAPI {
  /**
   */
  async loginRaw(
    requestParameters: LoginRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<ApiKeyDto>> {
    if (
      requestParameters.loginDto === null ||
      requestParameters.loginDto === undefined
    ) {
      throw new runtime.RequiredError(
        "loginDto",
        "Required parameter requestParameters.loginDto was null or undefined when calling login."
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/api/auth/login`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: LoginDtoToJSON(requestParameters.loginDto),
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      ApiKeyDtoFromJSON(jsonValue)
    );
  }

  /**
   */
  async login(
    requestParameters: LoginRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<ApiKeyDto> {
    const response = await this.loginRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   */
  async signUpRaw(
    requestParameters: SignUpRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<runtime.ApiResponse<ApiKeyDto>> {
    if (
      requestParameters.signUpDto === null ||
      requestParameters.signUpDto === undefined
    ) {
      throw new runtime.RequiredError(
        "signUpDto",
        "Required parameter requestParameters.signUpDto was null or undefined when calling signUp."
      );
    }

    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    headerParameters["Content-Type"] = "application/json";

    const response = await this.request(
      {
        path: `/api/auth/sign-up`,
        method: "POST",
        headers: headerParameters,
        query: queryParameters,
        body: SignUpDtoToJSON(requestParameters.signUpDto),
      },
      initOverrides
    );

    return new runtime.JSONApiResponse(response, (jsonValue) =>
      ApiKeyDtoFromJSON(jsonValue)
    );
  }

  /**
   */
  async signUp(
    requestParameters: SignUpRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction
  ): Promise<ApiKeyDto> {
    const response = await this.signUpRaw(requestParameters, initOverrides);
    return await response.value();
  }
}
